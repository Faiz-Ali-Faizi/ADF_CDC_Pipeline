{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "orry"
		},
		"CosmosDbBookings_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbBookings'"
		},
		"ADLS_Customer_Data_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://synapsedh.dfs.core.windows.net/"
		},
		"AzureSynapseAnalyticsDWH_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "synapsis.sql.azuresynapse.net"
		},
		"AzureSynapseAnalyticsDWH_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dedicatedPool"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Bookings AirBnB Fact Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CosmosSource": {},
									"source": {},
									"Bookings": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "ADLS_Customer_Data",
									"type": "LinkedServiceReference"
								},
								"folderPath": "airbnb"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "ef017d6a-9c6b-430e-bfb7-fc9c28f77141"
							}
						}
					},
					{
						"name": "Stored procedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Data flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "airbnb.BookingAggregation"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalyticsDWH",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Customer_Data')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalyticsDWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load Customer Dimensions SCD 1 Upsert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CustomerRaw",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachLoop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Upsert Customer Data Synapse Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "customer_raw_data",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlDWSink",
											"writeBehavior": "Upsert",
											"upsertSettings": {
												"keys": [
													"customer_id"
												],
												"interimSchemaName": ""
											},
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CustomerRaw",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CustomerDim",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Copy data To Customer Archive",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Upsert Customer Data Synapse Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "customer_raw_data",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CustomerRaw",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CustomerArchive",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Delete Files From RAW",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy data To Customer Archive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "CustomerRaw",
											"type": "DatasetReference",
											"parameters": {}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "ADLS_Customer_Data",
												"type": "LinkedServiceReference"
											}
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"wildcardFileName": {
												"value": "@item().name",
												"type": "Expression"
											},
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FileName": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CustomerRaw')]",
				"[concat(variables('factoryId'), '/datasets/CustomerDim')]",
				"[concat(variables('factoryId'), '/datasets/CustomerArchive')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Customer_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosBookings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbBookings",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "bookings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbBookings')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerArchive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_Customer_Data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "customer_archive",
						"fileSystem": "airbnb"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Customer_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerRaw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_Customer_Data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "customer_raw_data",
						"fileSystem": "airbnb"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Customer_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Customer_Data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_Customer_Data_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbBookings')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbBookings_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CosmosBookings",
								"type": "DatasetReference"
							},
							"name": "CosmosSource"
						},
						{
							"dataset": {
								"referenceName": "BookingsFact",
								"type": "DatasetReference"
							},
							"name": "source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BookingsFact",
								"type": "DatasetReference"
							},
							"name": "Bookings",
							"rejectedDataLinkedService": {
								"referenceName": "ADLS_Customer_Data",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "split"
						},
						{
							"name": "DerivedColumnsForFact"
						},
						{
							"name": "Lookup"
						},
						{
							"name": "IUDRows"
						},
						{
							"name": "SelectFinalCols"
						}
					],
					"scriptLines": [
						"source(output(",
						"          check_out_date as date,",
						"          customer_id as short,",
						"          timestamp as timestamp,",
						"          owner_id as string,",
						"          check_in_date as date,",
						"          property_id as string,",
						"          amount as double,",
						"          booking_id as string,",
						"          currency as string,",
						"          property_location as (city as string, country as string),",
						"          booking_date as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     enableChangeFeed: true,",
						"     changeFeedStartFromTheBeginning: true,",
						"     format: 'document',",
						"     systemColumns: false) ~> CosmosSource",
						"source(output(",
						"          booking_id as string,",
						"          property_id as string,",
						"          customer_id as integer,",
						"          owner_id as string,",
						"          check_in_date as date,",
						"          check_out_date as date,",
						"          booking_date as timestamp,",
						"          amount as double,",
						"          currency as string,",
						"          city as string,",
						"          country as string,",
						"          full_address as string,",
						"          stay_duration as long,",
						"          booking_year as integer,",
						"          booking_month as integer,",
						"          timestamp as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source",
						"CosmosSource split(check_out_date < check_in_date,",
						"     disjoint: true) ~> split@(BadRecords, AcceptedRecords)",
						"split@AcceptedRecords derive(check_out_date = check_out_date,",
						"          check_in_date = check_in_date,",
						"          customer_id = customer_id,",
						"          timestamp = timestamp,",
						"          owner_id = owner_id,",
						"          property_id = property_id,",
						"          amount = amount,",
						"          booking_id = booking_id,",
						"          currency = currency,",
						"          property_location = property_location,",
						"          booking_date = booking_date,",
						"          stay_duration = toInteger((toTimestamp(check_out_date) - toTimestamp(check_in_date)) / 86400000),",
						"          booking_year = year(booking_date),",
						"          booking_month = month(booking_date),",
						"          full_address = concat(property_location.city , \", \", property_location.country),",
						"          city = property_location.city,",
						"          country = property_location.country) ~> DerivedColumnsForFact",
						"DerivedColumnsForFact, source lookup(DerivedColumnsForFact@booking_id == source@booking_id,",
						"     multiple: false,",
						"     pickup: 'first',",
						"     desc(source@timestamp, true),",
						"     broadcast: 'auto')~> Lookup",
						"Lookup alterRow(insertIf(isNull(source@booking_id)),",
						"     updateIf(not(isNull(source@booking_id)))) ~> IUDRows",
						"IUDRows select(mapColumn(",
						"          check_out_date = DerivedColumnsForFact@check_out_date,",
						"          customer_id = DerivedColumnsForFact@customer_id,",
						"          timestamp = DerivedColumnsForFact@timestamp,",
						"          owner_id = DerivedColumnsForFact@owner_id,",
						"          check_in_date = DerivedColumnsForFact@check_in_date,",
						"          property_id = DerivedColumnsForFact@property_id,",
						"          amount = DerivedColumnsForFact@amount,",
						"          booking_id = DerivedColumnsForFact@booking_id,",
						"          currency = DerivedColumnsForFact@currency,",
						"          property_location,",
						"          booking_date = DerivedColumnsForFact@booking_date,",
						"          stay_duration = DerivedColumnsForFact@stay_duration,",
						"          booking_year = DerivedColumnsForFact@booking_year,",
						"          booking_month = DerivedColumnsForFact@booking_month,",
						"          full_address = DerivedColumnsForFact@full_address,",
						"          city = DerivedColumnsForFact@city,",
						"          country = DerivedColumnsForFact@country",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectFinalCols",
						"SelectFinalCols sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          booking_id as string,",
						"          property_id as string,",
						"          customer_id as integer,",
						"          owner_id as string,",
						"          check_in_date as date,",
						"          check_out_date as date,",
						"          booking_date as timestamp,",
						"          amount as double,",
						"          currency as string,",
						"          city as string,",
						"          country as string,",
						"          full_address as string,",
						"          stay_duration as long,",
						"          booking_year as integer,",
						"          booking_month as integer,",
						"          timestamp as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['booking_id'],",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          booking_id,",
						"          property_id,",
						"          customer_id,",
						"          owner_id,",
						"          check_in_date,",
						"          check_out_date,",
						"          booking_date,",
						"          amount,",
						"          currency,",
						"          city,",
						"          country,",
						"          full_address,",
						"          stay_duration,",
						"          booking_year,",
						"          booking_month,",
						"          timestamp",
						"     )) ~> Bookings"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CosmosBookings')]",
				"[concat(variables('factoryId'), '/datasets/BookingsFact')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Customer_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsDWH')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('AzureSynapseAnalyticsDWH_properties_typeProperties_server')]",
					"database": "[parameters('AzureSynapseAnalyticsDWH_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SystemAssignedManagedIdentity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BookingsFact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalyticsDWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "booking_id",
						"type": "nvarchar"
					},
					{
						"name": "property_id",
						"type": "nvarchar"
					},
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "owner_id",
						"type": "nvarchar"
					},
					{
						"name": "check_in_date",
						"type": "date"
					},
					{
						"name": "check_out_date",
						"type": "date"
					},
					{
						"name": "booking_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "amount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "currency",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "full_address",
						"type": "nvarchar"
					},
					{
						"name": "stay_duration",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "booking_year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "booking_month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "timestamp",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "airbnb",
					"table": "bookings_fact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalyticsDWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerDim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalyticsDWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "phone_number",
						"type": "nvarchar"
					},
					{
						"name": "address",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "state",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "zip_code",
						"type": "nvarchar"
					},
					{
						"name": "signup_date",
						"type": "date"
					},
					{
						"name": "last_login",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "total_bookings",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total_spent",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "preferred_language",
						"type": "nvarchar"
					},
					{
						"name": "referral_code",
						"type": "nvarchar"
					},
					{
						"name": "account_status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "airbnb",
					"table": "customer_dim"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalyticsDWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load CustomerDim-BookingFact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Load Customer Dimensions SCD 1 Upsert",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Bookings AirBnB Fact Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Load Customer Dimensions SCD 1 Upsert')]",
				"[concat(variables('factoryId'), '/pipelines/Bookings AirBnB Fact Load')]"
			]
		}
	]
}