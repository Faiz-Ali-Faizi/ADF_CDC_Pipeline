{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CosmosBookings",
						"type": "DatasetReference"
					},
					"name": "CosmosSource"
				},
				{
					"dataset": {
						"referenceName": "BookingsFact",
						"type": "DatasetReference"
					},
					"name": "source"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "BookingsFact",
						"type": "DatasetReference"
					},
					"name": "Bookings",
					"rejectedDataLinkedService": {
						"referenceName": "ADLS_Customer_Data",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "split"
				},
				{
					"name": "DerivedColumnsForFact"
				},
				{
					"name": "Lookup"
				},
				{
					"name": "IUDRows"
				},
				{
					"name": "SelectFinalCols"
				}
			],
			"scriptLines": [
				"source(output(",
				"          check_out_date as date,",
				"          customer_id as short,",
				"          timestamp as timestamp,",
				"          owner_id as string,",
				"          check_in_date as date,",
				"          property_id as string,",
				"          amount as double,",
				"          booking_id as string,",
				"          currency as string,",
				"          property_location as (city as string, country as string),",
				"          booking_date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     enableChangeFeed: true,",
				"     changeFeedStartFromTheBeginning: true,",
				"     format: 'document',",
				"     systemColumns: false) ~> CosmosSource",
				"source(output(",
				"          booking_id as string,",
				"          property_id as string,",
				"          customer_id as integer,",
				"          owner_id as string,",
				"          check_in_date as date,",
				"          check_out_date as date,",
				"          booking_date as timestamp,",
				"          amount as double,",
				"          currency as string,",
				"          city as string,",
				"          country as string,",
				"          full_address as string,",
				"          stay_duration as long,",
				"          booking_year as integer,",
				"          booking_month as integer,",
				"          timestamp as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> source",
				"CosmosSource split(check_out_date < check_in_date,",
				"     disjoint: true) ~> split@(BadRecords, AcceptedRecords)",
				"split@AcceptedRecords derive(check_out_date = check_out_date,",
				"          check_in_date = check_in_date,",
				"          customer_id = customer_id,",
				"          timestamp = timestamp,",
				"          owner_id = owner_id,",
				"          property_id = property_id,",
				"          amount = amount,",
				"          booking_id = booking_id,",
				"          currency = currency,",
				"          property_location = property_location,",
				"          booking_date = booking_date,",
				"          stay_duration = toInteger((toTimestamp(check_out_date) - toTimestamp(check_in_date)) / 86400000),",
				"          booking_year = year(booking_date),",
				"          booking_month = month(booking_date),",
				"          full_address = concat(property_location.city , \", \", property_location.country),",
				"          city = property_location.city,",
				"          country = property_location.country) ~> DerivedColumnsForFact",
				"DerivedColumnsForFact, source lookup(DerivedColumnsForFact@booking_id == source@booking_id,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     desc(source@timestamp, true),",
				"     broadcast: 'auto')~> Lookup",
				"Lookup alterRow(insertIf(isNull(source@booking_id)),",
				"     updateIf(not(isNull(source@booking_id)))) ~> IUDRows",
				"IUDRows select(mapColumn(",
				"          check_out_date = DerivedColumnsForFact@check_out_date,",
				"          customer_id = DerivedColumnsForFact@customer_id,",
				"          timestamp = DerivedColumnsForFact@timestamp,",
				"          owner_id = DerivedColumnsForFact@owner_id,",
				"          check_in_date = DerivedColumnsForFact@check_in_date,",
				"          property_id = DerivedColumnsForFact@property_id,",
				"          amount = DerivedColumnsForFact@amount,",
				"          booking_id = DerivedColumnsForFact@booking_id,",
				"          currency = DerivedColumnsForFact@currency,",
				"          property_location,",
				"          booking_date = DerivedColumnsForFact@booking_date,",
				"          stay_duration = DerivedColumnsForFact@stay_duration,",
				"          booking_year = DerivedColumnsForFact@booking_year,",
				"          booking_month = DerivedColumnsForFact@booking_month,",
				"          full_address = DerivedColumnsForFact@full_address,",
				"          city = DerivedColumnsForFact@city,",
				"          country = DerivedColumnsForFact@country",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectFinalCols",
				"SelectFinalCols sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          booking_id as string,",
				"          property_id as string,",
				"          customer_id as integer,",
				"          owner_id as string,",
				"          check_in_date as date,",
				"          check_out_date as date,",
				"          booking_date as timestamp,",
				"          amount as double,",
				"          currency as string,",
				"          city as string,",
				"          country as string,",
				"          full_address as string,",
				"          stay_duration as long,",
				"          booking_year as integer,",
				"          booking_month as integer,",
				"          timestamp as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['booking_id'],",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          booking_id,",
				"          property_id,",
				"          customer_id,",
				"          owner_id,",
				"          check_in_date,",
				"          check_out_date,",
				"          booking_date,",
				"          amount,",
				"          currency,",
				"          city,",
				"          country,",
				"          full_address,",
				"          stay_duration,",
				"          booking_year,",
				"          booking_month,",
				"          timestamp",
				"     )) ~> Bookings"
			]
		}
	}
}